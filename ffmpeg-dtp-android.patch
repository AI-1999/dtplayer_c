diff --git a/dtaudio/audio_decoder/ad_ffmpeg.c b/dtaudio/audio_decoder/ad_ffmpeg.c
index 9334fc3..7515855 100644
--- a/dtaudio/audio_decoder/ad_ffmpeg.c
+++ b/dtaudio/audio_decoder/ad_ffmpeg.c
@@ -11,14 +11,14 @@
 static AVFrame *frame;
 AVCodecContext *avctxp;
 
-static enum AVCodecID convert_to_id(int format)
+static enum CodecID convert_to_id(int format)
 {
     switch(format)
     {
         case AUDIO_FORMAT_AAC:
-            return AV_CODEC_ID_AAC;
+            return CODEC_ID_AAC;
         case AUDIO_FORMAT_AC3:
-            return AV_CODEC_ID_AC3;
+            return CODEC_ID_AC3;
 
         default:
             return 0;
@@ -60,7 +60,7 @@ int ffmpeg_adec_init (ad_wrapper_t *wrapper, void *parent)
         avctxp = alloc_ffmpeg_ctx(decoder); 
     if(!avctxp)
         return -1;
-    enum AVCodecID id = avctxp->codec_id;
+    enum CodecID id = avctxp->codec_id;
     dt_info (TAG, "[%s:%d] param-- src channel:%d sample:%d id:%d format:%d \n", __FUNCTION__, __LINE__, avctxp->channels, avctxp->sample_rate,id,decoder->aparam.afmt);
     dt_info (TAG, "[%s:%d] param-- dst channels:%d samplerate:%d \n", __FUNCTION__, __LINE__, decoder->aparam.dst_channels,decoder->aparam.dst_samplerate);
     codec = avcodec_find_decoder (id);
@@ -77,7 +77,7 @@ int ffmpeg_adec_init (ad_wrapper_t *wrapper, void *parent)
     }
     dt_info (TAG, "[%s:%d] ffmpeg dec init ok \n", __FUNCTION__, __LINE__);
     //alloc one frame for decode
-    frame = av_frame_alloc ();
+    frame = avcodec_alloc_frame ();
     return 0;
 }
 
@@ -201,7 +201,7 @@ int ffmpeg_adec_release (ad_wrapper_t *wrapper)
 {
     avcodec_close (avctxp);
     avctxp = NULL;
-    av_frame_free (&frame);
+    av_free (&frame);
     return 0;
 }
 
diff --git a/dtdemux/demuxer/demuxer_ffmpeg.c b/dtdemux/demuxer/demuxer_ffmpeg.c
index 98eab30..b9bbed3 100644
--- a/dtdemux/demuxer/demuxer_ffmpeg.c
+++ b/dtdemux/demuxer/demuxer_ffmpeg.c
@@ -246,7 +246,7 @@ static int media_format_convert (const char *name)
 
 }
 
-audio_format_t audio_format_convert (enum AVCodecID id)
+audio_format_t audio_format_convert (enum CodecID id)
 {
     audio_format_t format = AUDIO_FORMAT_INVALID;
     switch (id)
@@ -259,7 +259,7 @@ audio_format_t audio_format_convert (enum AVCodecID id)
     return format;
 }
 
-static int video_format_convert (enum AVCodecID id)
+static int video_format_convert (enum CodecID id)
 {
     video_format_t format;
     switch (id)
diff --git a/dtvideo/video_decoder/vd_ffmpeg.c b/dtvideo/video_decoder/vd_ffmpeg.c
index d99990c..477f72a 100644
--- a/dtvideo/video_decoder/vd_ffmpeg.c
+++ b/dtvideo/video_decoder/vd_ffmpeg.c
@@ -54,7 +54,7 @@ int ffmpeg_vdec_init (vd_wrapper_t *wrapper, void *parent)
     AVCodec *codec = NULL;
     AVCodecContext *avctxp = (AVCodecContext *) decoder->decoder_priv;
     avctxp->thread_count = 1;   //do not use multi thread,may crash
-    enum AVCodecID id = avctxp->codec_id;
+    enum CodecID id = avctxp->codec_id;
     codec = avcodec_find_decoder (id);
     if (NULL == codec)
     {
@@ -68,7 +68,7 @@ int ffmpeg_vdec_init (vd_wrapper_t *wrapper, void *parent)
     }
     dt_info (TAG, " [%s:%d] ffmpeg dec init ok \n", __FUNCTION__, __LINE__);
     //alloc one frame for decode
-    frame = av_frame_alloc ();
+    frame = avcodec_alloc_frame ();
     return 0;
 }
 
@@ -115,7 +115,7 @@ int ffmpeg_vdec_decode (vd_wrapper_t *wrapper, dt_av_frame_t * dt_frame, AVPictu
     pkt.pts = dt_frame->pts;
     pkt.dts = dt_frame->dts;
     pkt.side_data_elems = 0;
-    pkt.buf = NULL;
+    //pkt.buf = NULL;
     avcodec_decode_video2 (avctxp, frame, &got_picture, &pkt);
     if (got_picture)
     {
@@ -126,7 +126,7 @@ int ffmpeg_vdec_decode (vd_wrapper_t *wrapper, dt_av_frame_t * dt_frame, AVPictu
             ret = 1;
         //dt_info(TAG,"==got picture pts:%llu timestamp:%lld \n",frame->pkt_pts,frame->best_effort_timestamp);
     }
-    av_frame_unref (frame);
+    //av_frame_unref (frame);
     //no need to free dt_frame
     //will be freed outside
     return ret;
@@ -137,7 +137,7 @@ int ffmpeg_vdec_release (vd_wrapper_t *wrapper)
     dtvideo_decoder_t *decoder = (dtvideo_decoder_t *)wrapper->parent; 
     AVCodecContext *avctxp = (AVCodecContext *) decoder->decoder_priv;
     avcodec_close (avctxp);
-    av_frame_free (&frame);
+    av_free (&frame);
     if (pSwsCtx)
         sws_freeContext (pSwsCtx);
     pSwsCtx = NULL;
